function E_ROC = ExpstructGen(expinfo,a1,a2, behav_A)
% expinfo, a 1x2 cell containing 2 strings describes each animal and
% experiment
% a1, animal 1 ms struct or the path to the struct
% a2, animal 2 ms struct or the path to the struct, for 1 animal experiments leave a2 as [] 
% behav_A, A, annotation object generated by the toolbox, or its path 
% output a 1x2 cell containing the struct of 2 animals
if ~isstruct(a1) & ischar(a1)
    a1 = load(a1);
    fn = fields(a1);
    a1 = a1.(fn{1});
    
end

if ~isstruct(a2) & ischar(a2)
    if ~isempty(a2)
        a2 = load(a2);
        fn = fields(a2);
        a2 = a2.(fn{1});
    end
end



if ~isempty(a2)
    E_ROC = cell(1,2);
    A1stru.RawTraces = a1.RawTraces(:, a1.cell_label==1);
    A2stru.RawTraces = a2.RawTraces(:, a2.cell_label==1);
    A1stru.FiltTraces = a1.FiltTraces(:, a1.cell_label==1);
    A2stru.FiltTraces = a2.FiltTraces(:, a2.cell_label==1);
    
    A1stru.ExperimentInfo = expinfo{1};
    A2stru.ExperimentInfo = expinfo{2};

    %% construt behavior struct
    all_behavs = behav_A.getNames();
    n_behavs = length(all_behavs) - 1; % do not count 'other' 
    A1stru.Behavior.EventNames = all_behavs(2:end);
    A2stru.Behavior.EventNames = all_behavs(2:end);
    A1stru.Behavior.LogicalVecs = cell(1, n_behavs);
    A1stru.Behavior.OnsetTimes = cell(1, n_behavs);
    A1stru.Behavior.OffsetTimes = cell(1, n_behavs);
    A2stru.Behavior.LogicalVecs = cell(1, n_behavs);
    A2stru.Behavior.OnsetTimes = cell(1, n_behavs);
    A2stru.Behavior.OffsetTimes = cell(1, n_behavs);
    % animal 1
    behav_A.setStrm(1);
    for i = 1:n_behavs 
        this_b_name = all_behavs{i+1};
        A1stru.Behavior.LogicalVecs{i} = (behav_A.getLbls() == (i+1));
        btypes = behav_A.getTypes();
        btype_ids = find(btypes == (i+1)); % 1 is 'other', skip
        bstart = [];
        bend = [];
        for j = btype_ids
            bstart = [bstart, behav_A.getStart(j)];
            bend = [bend, behav_A.getEnd(j)];
        end
        A1stru.Behavior.OnsetTimes{i} = bstart;
        A1stru.Behavior.OffsetTimes{i} = bend;
        A1stru.behaviorStruct.(this_b_name).start = bstart;
        A1stru.behaviorStruct.(this_b_name).end = bend;
    end
    A1stru.behaviorStruct.totalFrames = behav_A.nFrame();
    % animal 2
    behav_A.setStrm(2);
    for i = 1:n_behavs
        this_b_name = all_behavs{i+1};
        A2stru.Behavior.LogicalVecs{i} = (behav_A.getLbls() == (i+1));
        btypes = behav_A.getTypes();
        btype_ids = find(btypes == (i+1)); % 1 is 'other', skip
        bstart = [];
        bend = [];
        for j = btype_ids
            bstart = [bstart, behav_A.getStart(j)];
            bend = [bend, behav_A.getEnd(j)];
        end
        A2stru.Behavior.OnsetTimes{i} = bstart;
        A2stru.Behavior.OffsetTimes{i} = bend;
        A2stru.behaviorStruct.(this_b_name).start = bstart;
        A2stru.behaviorStruct.(this_b_name).end = bend;
    end
    A2stru.behaviorStruct.totalFrames = behav_A.nFrame();


    A1stru.OppBehavior = A2stru.Behavior;
    A2stru.OppBehavior = A1stru.Behavior;
    %% set up output
    E_ROC{1} = A1stru;
    E_ROC{2} = A2stru;
else % only 1 animal
    E_ROC = cell(1);
    A1stru.DataMatrix = a1.RawTraces(:, a1.cell_label==1);
    A1stru.ExperimentInfo = expinfo;

    %% construt behavior struct
    all_behavs = behav_A.getNames();
    n_behavs = length(all_behavs) - 1; % do not count 'other' 
    A1stru.Behavior.EventNames = all_behavs(2:end);
    A1stru.Behavior.LogicalVecs = cell(1, n_behavs);
    A1stru.Behavior.OnsetTimes = cell(1, n_behavs);
    A1stru.Behavior.OffsetTimes = cell(1, n_behavs);
    % animal 1
    behav_A.setStrm(1);
    for i = 1:n_behavs 
        this_b_name = all_behavs{i+1};
        A1stru.Behavior.LogicalVecs = (behav_A.getLbls() == (i+1));
        btypes = behav_A.getTypes();
        btype_ids = find(btypes == (i+1)); % 1 is 'other', skip
        bstart = [];
        bend = [];
        for j = btype_ids
            bstart = [bstart, behav_A.getStart(j)];
            bend = [bend, behav_A.getEnd(j)];
        end
        A1stru.Behavior.OnsetTimes{i} = bstart;
        A1stru.Behavior.OffsetTimes{i} = bend;
        A1stru.behaviorStruct.(this_b_name).start = bstart;
        A1stru.behaviorStruct.(this_b_name).end = bend;
    end
    A1stru.behaviorStruct.totalFrames = behav_A.nFrame();
    %% set upt output
    E_ROC{1} = A1stru;
    
    
    
    
        
        
end

end

